#! /usr/bin/env node

const fs = require('fs');
const https = require('https');
const path = require('path');
const version = require('./version-helper');

const deployVersion = version.getDeployVersion();
const versionPath = path.join(__dirname, '../docs/dist/versions.json');
const versionsUrl =
  'https://apps.inindca.com/common-ui-docs/genesys-webcomponents/versions.json';

generateVersions();

// Generate Versions File

function generateVersions() {
  fetchPreviousVersions(remoteVersions => {
    if (!remoteVersions.includes(deployVersion)) {
      remoteVersions.push(deployVersion);
    }

    let versionJson = JSON.stringify(remoteVersions, null, 2);

    console.log('Generated Versions: ', versionJson);

    fs.writeFileSync(versionPath, versionJson, { encoding: 'utf8' });
  });
}

function fetchPreviousVersions(callback) {
  https
    .get(versionsUrl, res => {
      if (res.statusCode != 200) {
        console.log(
          `DOCUMENTATION BUILD FAILURE: Could not fetch version list from ${versionsUrl}:
    Response status was ${res.statusCode}`
        );
        process.exit(1);
      }

      let responseData = '';
      res.setEncoding('utf8');
      res.on('data', chunk => {
        responseData += chunk;
      });
      res.on('end', () => {
        const previousVersions = JSON.parse(responseData);
        callback(previousVersions);
      });
    })
    .on('error', e => {
      console.log(
        `DOCUMENTATION BUILD FAILURE: Unexpeted error generating versions file.`
      );
      console.error(error);
      process.exit(1);
    });
}
