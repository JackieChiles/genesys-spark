// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`gux-radial-progress #render should render component as expected (1) 1`] = `
<gux-radial-progress screenreader-text="Uploading file">
  <gux-radial-loading context="modal" screenreader-text="Uploading file"></gux-radial-loading>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (2) 1`] = `
<gux-radial-progress screenreader-text="Uploading file" value="0">
  <div aria-label="Uploading file" aria-valuemax="100" aria-valuemin="0" aria-valuenow="0" role="progressbar">
    <svg class="gux-svg-container" height="60px" role="presentation" viewBox="0 0 60 60" width="60px">
      <filter id="gux-dropshadow-i">
        <feGaussianBlur in="SourceGraphic" stdDeviation="1.4"></feGaussianBlur>
        <feOffset dx="0" dy="0" result="offsetblur"></feOffset>
        <feMerge>
          <feMergeNode></feMergeNode>
          <feMergeNode in="SourceGraphic"></feMergeNode>
        </feMerge>
      </filter>
      <circle class="gux-static-circle" cx="50%" cy="50%" r="23.5"></circle>
      <circle class="gux-dynamic-circle-shadow" cx="50%" cy="50%" filter="url(#gux-dropshadow-i)" r="23.5" stroke-dasharray="147.6548547187203" stroke-dashoffset="147.6548547187203" stroke-linecap="round"></circle>
      <circle class="gux-dynamic-circle" cx="50%" cy="50%" r="23.5" stroke-dasharray="147.6548547187203" stroke-dashoffset="147.6548547187203" stroke-linecap="round"></circle>
      <text class="gux-percentage" dominant-baseline="central" x="50%" y="50%">
        0%
      </text>
    </svg>
  </div>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (3) 1`] = `
<gux-radial-progress screenreader-text="Uploading file" value="10">
  <div aria-label="Uploading file" aria-valuemax="100" aria-valuemin="0" aria-valuenow="10" role="progressbar">
    <svg class="gux-svg-container" height="60px" role="presentation" viewBox="0 0 60 60" width="60px">
      <filter id="gux-dropshadow-i">
        <feGaussianBlur in="SourceGraphic" stdDeviation="1.4"></feGaussianBlur>
        <feOffset dx="0" dy="0" result="offsetblur"></feOffset>
        <feMerge>
          <feMergeNode></feMergeNode>
          <feMergeNode in="SourceGraphic"></feMergeNode>
        </feMerge>
      </filter>
      <circle class="gux-static-circle" cx="50%" cy="50%" r="23.5"></circle>
      <circle class="gux-dynamic-circle-shadow" cx="50%" cy="50%" filter="url(#gux-dropshadow-i)" r="23.5" stroke-dasharray="147.6548547187203" stroke-dashoffset="132.88936924684828" stroke-linecap="round"></circle>
      <circle class="gux-dynamic-circle" cx="50%" cy="50%" r="23.5" stroke-dasharray="147.6548547187203" stroke-dashoffset="132.88936924684828" stroke-linecap="round"></circle>
      <text class="gux-percentage" dominant-baseline="central" x="50%" y="50%">
        10%
      </text>
    </svg>
  </div>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (4) 1`] = `
<gux-radial-progress screenreader-text="Uploading file" value="100">
  <div aria-label="Uploading file" aria-valuemax="100" aria-valuemin="0" aria-valuenow="100" role="progressbar">
    <svg class="gux-svg-container" height="60px" role="presentation" viewBox="0 0 60 60" width="60px">
      <filter id="gux-dropshadow-i">
        <feGaussianBlur in="SourceGraphic" stdDeviation="1.4"></feGaussianBlur>
        <feOffset dx="0" dy="0" result="offsetblur"></feOffset>
        <feMerge>
          <feMergeNode></feMergeNode>
          <feMergeNode in="SourceGraphic"></feMergeNode>
        </feMerge>
      </filter>
      <circle class="gux-static-circle" cx="50%" cy="50%" r="23.5"></circle>
      <circle class="gux-dynamic-circle-shadow" cx="50%" cy="50%" filter="url(#gux-dropshadow-i)" r="23.5" stroke-dasharray="147.6548547187203" stroke-dashoffset="0" stroke-linecap="round"></circle>
      <circle class="gux-dynamic-circle" cx="50%" cy="50%" r="23.5" stroke-dasharray="147.6548547187203" stroke-dashoffset="0" stroke-linecap="round"></circle>
      <text class="gux-percentage" dominant-baseline="central" x="50%" y="50%">
        100%
      </text>
    </svg>
  </div>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (5) 1`] = `
<gux-radial-progress screenreader-text="Uploading file" value="123">
  <gux-radial-loading context="modal" screenreader-text="Uploading file"></gux-radial-loading>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (6) 1`] = `
<gux-radial-progress screenreader-text="Uploading file" value="200">
  <gux-radial-loading context="modal" screenreader-text="Uploading file"></gux-radial-loading>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (7) 1`] = `
<gux-radial-progress max="100" screenreader-text="Uploading file" value="10">
  <div aria-label="Uploading file" aria-valuemax="100" aria-valuemin="0" aria-valuenow="10" role="progressbar">
    <svg class="gux-svg-container" height="60px" role="presentation" viewBox="0 0 60 60" width="60px">
      <filter id="gux-dropshadow-i">
        <feGaussianBlur in="SourceGraphic" stdDeviation="1.4"></feGaussianBlur>
        <feOffset dx="0" dy="0" result="offsetblur"></feOffset>
        <feMerge>
          <feMergeNode></feMergeNode>
          <feMergeNode in="SourceGraphic"></feMergeNode>
        </feMerge>
      </filter>
      <circle class="gux-static-circle" cx="50%" cy="50%" r="23.5"></circle>
      <circle class="gux-dynamic-circle-shadow" cx="50%" cy="50%" filter="url(#gux-dropshadow-i)" r="23.5" stroke-dasharray="147.6548547187203" stroke-dashoffset="132.88936924684828" stroke-linecap="round"></circle>
      <circle class="gux-dynamic-circle" cx="50%" cy="50%" r="23.5" stroke-dasharray="147.6548547187203" stroke-dashoffset="132.88936924684828" stroke-linecap="round"></circle>
      <text class="gux-percentage" dominant-baseline="central" x="50%" y="50%">
        10%
      </text>
    </svg>
  </div>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (8) 1`] = `
<gux-radial-progress max="10" screenreader-text="Uploading file" value="10">
  <div aria-label="Uploading file" aria-valuemax="10" aria-valuemin="0" aria-valuenow="10" role="progressbar">
    <svg class="gux-svg-container" height="60px" role="presentation" viewBox="0 0 60 60" width="60px">
      <filter id="gux-dropshadow-i">
        <feGaussianBlur in="SourceGraphic" stdDeviation="1.4"></feGaussianBlur>
        <feOffset dx="0" dy="0" result="offsetblur"></feOffset>
        <feMerge>
          <feMergeNode></feMergeNode>
          <feMergeNode in="SourceGraphic"></feMergeNode>
        </feMerge>
      </filter>
      <circle class="gux-static-circle" cx="50%" cy="50%" r="23.5"></circle>
      <circle class="gux-dynamic-circle-shadow" cx="50%" cy="50%" filter="url(#gux-dropshadow-i)" r="23.5" stroke-dasharray="147.6548547187203" stroke-dashoffset="0" stroke-linecap="round"></circle>
      <circle class="gux-dynamic-circle" cx="50%" cy="50%" r="23.5" stroke-dasharray="147.6548547187203" stroke-dashoffset="0" stroke-linecap="round"></circle>
      <text class="gux-percentage" dominant-baseline="central" x="50%" y="50%">
        100%
      </text>
    </svg>
  </div>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (9) 1`] = `
<gux-radial-progress max="100" screenreader-text="Uploading file" value="test">
  <gux-radial-loading context="modal" screenreader-text="Uploading file"></gux-radial-loading>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (10) 1`] = `
<gux-radial-progress max="100" screenreader-text="Uploading file" value="-123">
  <gux-radial-loading context="modal" screenreader-text="Uploading file"></gux-radial-loading>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (11) 1`] = `
<gux-radial-progress max="100" screenreader-text="Uploading file" value="200">
  <gux-radial-loading context="modal" screenreader-text="Uploading file"></gux-radial-loading>
</gux-radial-progress>
`;

exports[`gux-radial-progress #render should render component as expected (12) 1`] = `
<gux-radial-progress max="test" screenreader-text="Uploading file" value="10">
  <gux-radial-loading context="modal" screenreader-text="Uploading file"></gux-radial-loading>
</gux-radial-progress>
`;
