// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`gux-badge-beta #render should render component as expected (1) 1`] = `
<gux-badge-beta>
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (2) 1`] = `
<gux-badge-beta accent="info">
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (3) 1`] = `
<gux-badge-beta accent="success">
  <mock:shadow-root>
    <div class="gux-badge gux-neutral gux-success">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (4) 1`] = `
<gux-badge-beta accent="warning">
  <mock:shadow-root>
    <div class="gux-badge gux-neutral gux-warning">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (5) 1`] = `
<gux-badge-beta accent="error">
  <mock:shadow-root>
    <div class="gux-badge gux-error gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (6) 1`] = `
<gux-badge-beta accent="inherit">
  <mock:shadow-root>
    <div class="gux-badge gux-inherit gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (7) 1`] = `
<gux-badge-beta bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (8) 1`] = `
<gux-badge-beta accent="info" bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (9) 1`] = `
<gux-badge-beta accent="success" bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-neutral gux-success">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (10) 1`] = `
<gux-badge-beta accent="warning" bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-neutral gux-warning">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (11) 1`] = `
<gux-badge-beta accent="error" bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-error gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (12) 1`] = `
<gux-badge-beta accent="inherit" bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-inherit gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (13) 1`] = `
<gux-badge-beta>
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (14) 1`] = `
<gux-badge-beta accent="info">
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (15) 1`] = `
<gux-badge-beta accent="success">
  <mock:shadow-root>
    <div class="gux-badge gux-neutral gux-success">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (16) 1`] = `
<gux-badge-beta accent="warning">
  <mock:shadow-root>
    <div class="gux-badge gux-neutral gux-warning">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (17) 1`] = `
<gux-badge-beta accent="error">
  <mock:shadow-root>
    <div class="gux-badge gux-error gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (18) 1`] = `
<gux-badge-beta accent="inherit">
  <mock:shadow-root>
    <div class="gux-badge gux-inherit gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (19) 1`] = `
<gux-badge-beta bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (20) 1`] = `
<gux-badge-beta accent="info" bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (21) 1`] = `
<gux-badge-beta accent="success" bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-neutral gux-success">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (22) 1`] = `
<gux-badge-beta accent="warning" bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-neutral gux-warning">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (23) 1`] = `
<gux-badge-beta accent="error" bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-error gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (24) 1`] = `
<gux-badge-beta accent="inherit" bold="">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-inherit gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (1) 1`] = `
<gux-badge-beta>
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (2) 1`] = `
<gux-badge-beta color="neutral">
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (3) 1`] = `
<gux-badge-beta color="green">
  <mock:shadow-root>
    <div class="gux-badge gux-green gux-info">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: green
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (4) 1`] = `
<gux-badge-beta color="yellow">
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-yellow">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: yellow
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (5) 1`] = `
<gux-badge-beta color="red">
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-red">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: red
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (6) 1`] = `
<gux-badge-beta bold="" color="neutral">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (7) 1`] = `
<gux-badge-beta bold="" color="green">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-green gux-info">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: green bold
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (8) 1`] = `
<gux-badge-beta bold="" color="yellow">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-info gux-yellow">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: yellow bold
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (9) 1`] = `
<gux-badge-beta bold="" color="red">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-info gux-red">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: red bold
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (10) 1`] = `
<gux-badge-beta color="inherit">
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-inherit">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label:
      </div>
    </div>
  </mock:shadow-root>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (11) 1`] = `
<gux-badge-beta>
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (12) 1`] = `
<gux-badge-beta color="neutral">
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (13) 1`] = `
<gux-badge-beta color="green">
  <mock:shadow-root>
    <div class="gux-badge gux-green gux-info">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: green
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (14) 1`] = `
<gux-badge-beta color="yellow">
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-yellow">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: yellow
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (15) 1`] = `
<gux-badge-beta color="red">
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-red">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: red
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (16) 1`] = `
<gux-badge-beta bold="" color="neutral">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-info gux-neutral">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: neutral bold
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (17) 1`] = `
<gux-badge-beta bold="" color="green">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-green gux-info">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: green bold
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (18) 1`] = `
<gux-badge-beta bold="" color="yellow">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-info gux-yellow">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: yellow bold
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (19) 1`] = `
<gux-badge-beta bold="" color="red">
  <mock:shadow-root>
    <div class="gux-badge gux-bold gux-info gux-red">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label: , color: red bold
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;

exports[`gux-badge-beta #render should render component as expected (deprecated) (20) 1`] = `
<gux-badge-beta color="inherit">
  <mock:shadow-root>
    <div class="gux-badge gux-info gux-inherit">
      <gux-tooltip-title>
        <span>
          <slot aria-hidden="true"></slot>
        </span>
      </gux-tooltip-title>
      <div class="gux-sr-only">
        badge with label:
      </div>
    </div>
  </mock:shadow-root>
  <gux-icon decorative="" icon-name="subtract"></gux-icon>
  Badge
</gux-badge-beta>
`;
